plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

// Load version configs
def vProps = new Properties()
file("../config.properties").withInputStream { vProps.load(it) }

sourceCompatibility = vProps.java_version as Integer
targetCompatibility = vProps.java_version as Integer

archivesBaseName = vProps.archives_base_name + '-fabric'
version = "v${vProps.mod_version}-${vProps.minecraft_version}"
group = vProps.maven_group // http://maven.apache.org/guides/mini/guide-naming-conventions.html

repositories {
    // Cloth config
    maven {
        name "shedaniel"
        url "https://maven.shedaniel.me/"
    }
    // Mod Menu
    maven {
        name "TerraformersMC"
        url "https://maven.terraformersmc.com/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${vProps.minecraft_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${vProps.fabric_loader_version}"

    modApi "net.fabricmc.fabric-api:fabric-api:${vProps.fabric_api_version}+${vProps.minecraft_version}"

    modApi("me.shedaniel.cloth:cloth-config-fabric:${vProps.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modApi("com.terraformersmc:modmenu:${vProps.modmenu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", vProps.minecraft_version

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": vProps.minecraft_version,
                "fabric_loader_version": vProps.fabric_loader_version,
                "java_version": vProps.java_version
    }

    filesMatching("disable_compliance_notification.mixins.json") {
        expand "java_version": vProps.java_version
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    options.release = vProps.java_version as Integer
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(vProps.java_version as Integer)
    }

    sourceSets.main.java.srcDirs += ['../src/main']
    sourceSets.main.java.srcDirs += ['../src/fabric']

    sourceSets.main.resources.srcDirs += ['../src/main/resources']
    sourceSets.main.resources.srcDirs += ['../src/fabric/resources']
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}