plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.26'
    id 'net.neoforged.gradle.mixin' version '7.0.+'
}

repositories {
    maven { url = 'https://maven.neoforged.net/releases' }
    jcenter()
    mavenCentral()
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven { url = 'https://maven.shedaniel.me/' }
}


// Load version configs
def vProps = new Properties()
file("../config.properties").withInputStream { vProps.load(it) }

archivesBaseName = vProps.archives_base_name
version = "v${vProps.mod_version}+neoforge-${vProps.minecraft_version}"
group = vProps.maven_group

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(vProps.java_version as Integer)
    }

    sourceSets.main.java.srcDirs += ['../src/main']
    sourceSets.main.java.srcDirs += ['../src/neoforge']

    sourceSets.main.resources.srcDirs += ['../src/main/resources']
    sourceSets.main.resources.srcDirs += ['../src/neoforge/resources']
}

mixin {
    config 'disable_compliance_notification.mixins.json'
}

runs {
    configureEach {
        workingDirectory project.file('run')
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }
    client
    server
}

dependencies {
    implementation "net.neoforged:neoforge:${vProps.neoforge_version}"

    annotationProcessor "net.fabricmc:sponge-mixin:${vProps.fabric_mixin_processor_version}+mixin.${vProps.mixin_processor_version}"

    api "me.shedaniel.cloth:cloth-config-forge:${vProps.cloth_config_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", vProps.minecraft_version

    filesMatching("META-INF/mods.toml") {
        expand "version": vProps.mod_version,
                "minecraft_version": vProps.minecraft_version,
                "neoforge_major_version": vProps.neoforge_version.split('\\.')[0] + '.' + vProps.neoforge_version.split('\\.')[1],
                "cloth_config_major_version": vProps.cloth_config_version.split('\\.')[0]
    }

    filesMatching("disable_compliance_notification.mixins.json") {
        expand "java_version": vProps.java_version
    }

    filesMatching("pack.mcmeta") {
        expand "pack_format": vProps.pack_format
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "DisableComplianceNotification",
                "Specification-Vendor"    : "MPThLee",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : "Disable Compliance Notification",
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "MPThLee",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "disable_compliance_notification.mixins.json"
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    options.release = vProps.java_version as Integer
}
